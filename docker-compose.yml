version: "3.8"

services:
  webserver1:
    image: webserver:latest
    container_name: webserver1
    user: 1000:1000
    environment:
      - SERVER_PORT=8080
      - REDIS_HOST=redis-dev
      - REDIS_PORT=6379
      - APPNAME=webserver1
      - CONFIG_FILE=/backend/config.json
      - KAFKA_BROKER_ADDR=kafka-dev:9092
    ports:
      - "8081:8080"
    volumes:
      - ./logs:/logs
      - ./config.json:/backend/config.json:ro
    depends_on:
      - redis-dev
      - kafka-dev

  webserver2:
    image: webserver:latest
    container_name: webserver2
    user: 1000:1000
    environment:
      - SERVER_PORT=8080
      - REDIS_HOST=redis-dev
      - REDIS_PORT=6379
      - APPNAME=webserver2
      - CONFIG_FILE=/backend/config.json
      - KAFKA_BROKER_ADDR=kafka-dev:9092
    ports:
      - "8082:8080"
    volumes:
      - ./logs:/logs
      - ./config.json:/backend/config.json:ro
    depends_on:
      - redis-dev
      - kafka-dev

  webserver3:
    image: webserver:latest
    container_name: webserver3
    user: 1000:1000
    environment:
      - SERVER_PORT=8080
      - REDIS_HOST=redis-dev
      - REDIS_PORT=6379
      - APPNAME=webserver3
      - CONFIG_FILE=/backend/config.json
      - KAFKA_BROKER_ADDR=kafka-dev:9092
    ports:
      - "8083:8080"
    volumes:
      - ./logs:/logs
      - ./config.json:/backend/config.json:ro
    depends_on:
      - redis-dev
      - kafka-dev

  # NGINX as reverse proxy
  nginx-dev:
    image: nginx:alpine
    container_name: nginx-dev
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "8089:8089"
    depends_on:
      - webserver1
      - webserver2
      - webserver3

  zookeeper-dev:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper-dev
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-dev:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-dev
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-dev:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-dev:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "events:3:1"
    depends_on:
      - zookeeper-dev

  redis-dev:
    image: redis:alpine
    container_name: redis-dev
    ports:
      - "6379:6379"

networks:
  default:
    driver: bridge
